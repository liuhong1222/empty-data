<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongzhi.data.mapper.realtime.RealtimeCheckMapper">

   	<insert id="saveList" parameterType="java.util.List">
   		insert into realtime_check(id, agent_id, agent_name, customer_id, name, size, normal, empty, on_call, 
   		                           online_but_not_available, shutdown, call_transfer, suspected_shutdown, service_suspended,
   		                            number_portability, unknown, illegal_number, total_number, file_url, status, check_type, 
   		                            retry_count, deleted, md5, line, send_count, remark, version, create_time, update_time, exception_fail_count)
   		values
		<foreach collection="list" item="item" index="index" separator=",">
				(#{item.id},#{item.agentId},#{item.agentName},#{item.customerId},#{item.name},#{item.size},#{item.normal},
				#{item.empty},#{item.onCall},#{item.onlineButNotAvailable},#{item.shutdown},#{item.callTransfer},#{item.suspectedShutdown},
				#{item.serviceSuspended},#{item.numberPortability},#{item.unknown},#{item.illegalNumber},#{item.totalNumber},#{item.fileUrl},
				#{item.status},#{item.checkType},#{item.retryCount},0,#{item.md5},#{item.line},#{item.sendCount},
				#{item.remark},#{item.version},now(),now(),#{item.exceptionFailCount})
		</foreach>
   	</insert>
   	
   	<insert id="saveOne" parameterType="com.zhongzhi.data.entity.realtime.RealtimeCheck">
   		insert into realtime_check(id, agent_id, agent_name, customer_id, name, size, normal, empty, on_call, 
   		                           online_but_not_available, shutdown, call_transfer, suspected_shutdown, service_suspended,
   		                            number_portability, unknown, illegal_number, total_number, file_url, status, check_type, 
   		                            retry_count, deleted, md5, line, send_count, remark, version, create_time, update_time, exception_fail_count)
   		values
   		(#{id},#{agentId},#{agentName},#{customerId},#{name},#{size},#{normal},
				#{empty},#{onCall},#{onlineButNotAvailable},#{shutdown},#{callTransfer},#{suspectedShutdown},
				#{serviceSuspended},#{numberPortability},#{unknown},#{illegalNumber},#{totalNumber},#{fileUrl},
				#{status},#{checkType},#{retryCount},0,#{md5},#{line},#{sendCount},
				#{remark},#{version},now(),now(),#{exceptionFailCount})
   	</insert>
   	
   	<update id="updateOne" parameterType="com.zhongzhi.data.entity.realtime.RealtimeCheck">
   		update realtime_check
   		set status = #{status},
   		    normal = #{normal},
   		    empty = #{empty},
   		    on_call = #{onCall},
   		    online_but_not_available = #{onlineButNotAvailable},
   		    shutdown = #{shutdown},
   		    suspected_shutdown = #{suspectedShutdown},
   		    service_suspended = #{serviceSuspended},
   		    number_portability = #{numberPortability},
   		    unknown = #{unknown},
   		    illegal_number = #{illegalNumber},
   		    total_number = #{totalNumber},
   		    line = #{line},
   		    update_time = now()
   		where id = #{id}
   	</update>

	<select id="findOne" resultType="com.zhongzhi.data.entity.realtime.RealtimeCheck">
   		select id, agent_id agentId, agent_name agentName, customer_id customerId, name, size, normal, empty, on_call onCall, 
                online_but_not_available onlineButNotAvailable, shutdown, call_transfer callTransfer, suspected_shutdown suspectedShutdown, service_suspended serviceSuspended,
                 number_portability numberPortability, unknown, illegal_number illegalNumber, total_number totalNumber, file_url fileUrl, status, check_type checkType, 
                 retry_count retryCount, deleted, md5, line, send_count sendCount, remark, version, create_time createTime, update_time updateTime, exception_fail_count exceptionFailCount
   		from realtime_check
   		where customer_id = #{customerId} and id = #{emptyId}
   		limit 0,1
   	</select>

	<!--实时检测记录-查找（通过状态和时间）-->
    <select id="findByStatusAndCreateTime" resultType="com.zhongzhi.data.entity.realtime.RealtimeCheck">
		select
			id, agent_id, agent_name, customer_id, name, size, normal, empty, on_call,
		    online_but_not_available, shutdown, call_transfer, suspected_shutdown, service_suspended,
			number_portability, unknown, illegal_number, total_number, file_url, status, check_type,
			retry_count, deleted, md5, line, send_count, remark, version, create_time, update_time, exception_fail_count
		from realtime_check
		where status=#{status} and create_time &gt;= #{date}
	</select>

	<!--实时检测记录（在线测试）-列表-->
    <select id="getTestRecord" resultType="com.zhongzhi.data.entity.realtime.RealtimeCheck">
		select
			id, agent_id, agent_name, customer_id, name, size, normal, empty, on_call,
		    online_but_not_available, shutdown, call_transfer, suspected_shutdown, service_suspended,
			number_portability, unknown, illegal_number, total_number, file_url, status, check_type,
			retry_count, deleted, md5, line, send_count, remark, version, create_time, update_time, exception_fail_count
		from realtime_check
		where customer_id=#{customerId} and (file_url=null or file_url='')
		order by create_time desc
	</select>

	<select id="selectStatisticalData" resultType="com.zhongzhi.data.vo.PersonalStatisticalDataBo">
		select sum(total_number) consumeTotal, sum(normal) activeTotal, customer_id customerId
		from realtime_check
		where customer_id = #{customerId}
		  and create_time between #{fromTime} and #{endTime}
		  and status = 9
	</select>

	<!--实时检测-删除-->
	<update id="delete">
		update realtime_check
		set deleted = 1, update_time = now()
		where id=#{id}
	</update>

	<!--实时检测记录分页列表-->
	<select id="getRealtimePageList" resultType="com.zhongzhi.data.vo.RealtimeCheckQueryVo">
		select
			id, agent_id, agent_name, customer_id, name, size, normal, empty, on_call,
			online_but_not_available, shutdown, call_transfer, suspected_shutdown, service_suspended,
			number_portability, unknown, illegal_number, total_number, file_url, status, check_type,
			retry_count, deleted, md5, line, send_count, remark, version, create_time, update_time, exception_fail_count
		from realtime_check
		<where>
			deleted = 0 and (remark = 'api_upload' or remark = 'upload')
			and (status = 9 or status = 11)
			and update_time <![CDATA[ <= ]]> now()
			<if test="customerId != null">
				and customer_id = #{customerId}
			</if>
			<if test="createTimeFrom != null">
				and create_time >= #{createTimeFrom}
			</if>
			<if test="createTimeEnd != null">
				and create_time &lt;= #{createTimeEnd}
			</if>
		</where>
		order by create_time desc
	</select>

	<!--通过条件查询实时检测记录-->
	<select id="findByCondition" resultType="com.zhongzhi.data.entity.realtime.RealtimeCheck">
		select id, agent_id, agent_name, customer_id, name, size, normal, empty, on_call,
			   online_but_not_available, shutdown, call_transfer, suspected_shutdown, service_suspended,
			   number_portability, unknown, illegal_number, total_number, file_url, status, check_type,
			   retry_count, deleted, md5, line, send_count, remark, version, create_time, update_time, exception_fail_count
		from realtime_check
		<where>
			<if test="status!=null">
				and status=#{status}
			</if>
			<if test="remark!=null">
				and remark=#{remark}
			</if>
			and customer_id=#{customerId} and deleted=0
		</where>
		order by create_time desc
		limit 1
	</select>

	<!--统计实时检测数据-->
	<select id="statistics" resultType="com.zhongzhi.data.entity.realtime.RealtimeCheckStatistics">
		select sum(ifnull(normal_number,0))                     		normal,
			   sum(ifnull(empty_number,0))                   		empty,
			   sum(ifnull(oncall_number,0))                    		onCall,
			   sum(ifnull(not_online_number,0))        onlineButNotAvailable,
			   sum(ifnull(shutdown_number,0))                    	shutdown,
			   0                   callTransfer,
			   sum(ifnull(like_shutdown_number,0))              suspectedShutdown,
			   sum(ifnull(tingji_number,0))               serviceSuspended,
			   sum(ifnull(mnp_number,0))              numberPortability,
			   sum(ifnull(unknown_number,0))                    	`unknown`,
			   sum(ifnull(moberr_number,0))                  illegalNumber,
			   sum(ifnull(total_number,0))                    totalNumber,
			   create_date `day`
		from realtime_cvs_file_path
		where customer_id = #{customerId}
			and create_date >= #{from}
			and create_date &lt; #{end}
		group by create_date
	</select>
</mapper>